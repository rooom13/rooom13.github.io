{"version":3,"sources":["images/profile.png","media.js","components/Navbar.js","pages/Introduction.js","components/ContactButton.js","pages/Contact.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","sizes","mobileS","mobileM","mobileL","tablet","laptop","laptopL","desktop","Object","keys","reduce","acc","label","css","_templateObject","apply","arguments","Navbar","_this$props","this","props","isIntroductionShown","isContactShown","showIntroduction","isPortfolioShown","isCvShown","showContact","showCv","showPortfolio","react_default","a","createElement","NavWrapper","StyledNav","NavItem","isSelected","onClick","Component","styled","div","Navbar_templateObject","nav","_templateObject2","media","_templateObject3","_templateObject4","CoolTopic","span","Introduction_templateObject","Wrapper","Introduction_templateObject2","BigName","b","Introduction_templateObject3","Introduction_templateObject4","ProfilePicMobileWrapper","_templateObject5","ProfilePicMobile","img","_templateObject6","_templateObject7","ProfilePicTablet","_templateObject8","_templateObject9","Introduction","id","src","profilePicPath","isNotMobile","ContactButton","link","iconClass","linkText","children","ContactButton_Wrapper","StyledButton","href","className","aria-hidden","LinkText","ContactButton_templateObject","ContactButton_templateObject2","ContactButton_templateObject3","Contact","Contact_Wrapper","ButtonsWrapper","target","title","Contact_templateObject","Contact_templateObject2","Contact_templateObject3","App","state","_this","setState","_this$state","App_Wrapper","components_Navbar","ContentWrapper","Content","pages_Introduction","section","App_templateObject","App_templateObject2","App_templateObject3","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.cd057b12.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/profile.9ddc953d.png\";","import { css } from 'styled-components'\nconst sizes = {\n    mobileS: 320,\n    mobileM: 375,\n    mobileL: 425,\n    tablet: 768,\n    laptop: 1024,\n    laptopL: 1440,\n    desktop: 2560\n}\nexport default Object.keys(sizes).reduce((acc, label) => {\n    acc[label] = (...args) => css`\n      @media (min-width: ${sizes[label]}px) {\n         ${css(...args)};\n      }\n   `\n    return acc\n}, {})","import React, { Component } from 'react';\nimport styled from 'styled-components'\nimport media from '../media'\n\nclass Navbar extends Component {\n\n\n\n    render() {\n\n    const { isIntroductionShown, isContactShown, isPortfolioShown, isCvShown, showIntroduction, showContact, showCv, showPortfolio} = this.props\n        return (\n            <NavWrapper>\n                <StyledNav>\n                    <NavItem isSelected={isIntroductionShown} onClick={showIntroduction}>Who I am</NavItem>\n                    {/* <NavItem isSelected={isCvShown} onClick={showCv}>CV</NavItem> */}\n                    {/* <NavItem isSelected={isPortfolioShown} onClick={showPortfolio}>Portfolio</NavItem> */}\n                    <NavItem isSelected={isContactShown} onClick={showContact}>Contact</NavItem>\n                </StyledNav>\n            </NavWrapper>\n        )\n    }\n\n}\n\n\nconst NavWrapper = styled.div`\n  \n  width: 100%;\n`\nconst StyledNav = styled.nav`\n\n${media.tablet`\n  margin-top: 8rem;  \n`}\n\n  display: flex;\n  justify-content: center;\n`\n\nconst NavItem = styled.div`\n  cursor:pointer;\n  padding: 0.8rem;\n  font-size: 1.2rem;\n  border-bottom: 2px solid black;\n  \n  ${(props)=>props.isSelected && `\n    font-style: italic;\n  `};\n  &:hover {\n    border-bottom: 2px solid white;\n  }\n  &:focus {\n    font-style: italic;\n  }\n`\n\nexport default Navbar\n","import React from 'react';\nimport styled from 'styled-components'\nimport profilePicPath from '../images/profile.png'\nimport media from '../media'\n\nfunction Introduction() {\n    return (\n\n        <Wrapper id=\"introduction\">\n            <span>\n                <div >Hi there!</div>\n                <ProfilePicMobileWrapper>\n                    <ProfilePicMobile src={profilePicPath} />\n                </ProfilePicMobileWrapper>\n\n                <div> I'm <BigName>RomÃ¡n Rey Pedrero</BigName></div>\n                <span>a computer science & engineering student from Barcelona based in Munich who loves all the science behind <CoolTopic>Cognitive Systems</CoolTopic> such as <CoolTopic>Machine Learning, Natural Language Processing, Computer Vision and Artificial Intelligence ðŸ¤–</CoolTopic></span>\n                <p>I aswell have a developer soul wich encourages me to be a self learner and carry out my personal projects to discover new paths.</p>\n            </span>\n\n            {<ProfilePicTablet isNotMobile src={profilePicPath} />}\n        </Wrapper>\n\n    )\n}\n\n\nconst CoolTopic = styled.span`\n  font-size:1.1rem;\n  font-family: monospace;\n`\nconst Wrapper = styled.div`\n  display: flex;\n  line-height: 1.5\n  `\n\n\nconst BigName = styled.b`\n  \n  font-size: 1.5rem;\n  \n  ${media.tablet`\n  font-size: 3rem;\n  `}\n  `\n\nconst ProfilePicMobileWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  width: 100%\n`\n\nconst ProfilePicMobile = styled.img`\n\n  width: 8rem;\n  height: 8rem;\n  border-radius: 50%; \n  padding: 0.5rem;\n  border: 1px solid;\n  margin: 1rem;\n  ${media.tablet`\n    display:none;\n  `}\n  `\nconst ProfilePicTablet = styled.img`\n  display: none;\n  ${media.tablet`\n    display: block;\n    width: 16rem;\n    heihgt: 16rem;\n    border-radius: 50%; \n    padding: 0.5rem;\n    border: 1px solid;\n    margin: 1rem;\n  `}\n  \n`\n\nexport default Introduction\n","import React from 'react';\nimport styled from 'styled-components'\nimport media from '../media'\n\nexport default function ContactButton(props) {\n\n    const {link, iconClass} = props\n    const linkText = props.children\n\n    return (\n\n        <Wrapper>\n\n            <StyledButton href={link}>\n                <i className={iconClass} aria-hidden=\"true\"></i>\n            </StyledButton>\n            <LinkText href={link}>  {linkText}</LinkText>\n\n        </Wrapper>\n    )\n}\n\n\nconst LinkText = styled.a`\n  font-style: italic;\n  font-family: monospace;\n\n  color: white;\n  &:visited {\n      color: #b57cff;\n  }\n\n`\nconst StyledButton = styled.a`\n  display:flex;\n  justify-content:center;\n  align-items: center;\n\n  >i {color: white;}\n  background-color: #2d2d2d;\n  &:hover{\n      background-color: #4e4e4e;\n  }\n  &:active{\n      background-color: #151515;\n  }\n\n  border-radius: 25px;\n\n  text-decoration: none; \n  decoration: none; \n\n  margin-top: 1rem;\n  margin-bottom: 0.25rem;\n  width: 7rem;\n  height: 7rem;\n  \n\n  \n`\n\nconst Wrapper = styled.div`\ndisplay: flex;\nflex-direction: column;\njustify-content: center;\nalign-items: center;\n\n  `","import React from 'react';\nimport styled from 'styled-components'\nimport ContactButton from '../components/ContactButton'\nimport media from '../media'\n\nexport default function Contact() {\n  \n  const mailLink = \"mailto:romanreypedrero@gmail.com?subject=Your personal website is so cool&body=Hey RomÃ¡n how are you doing?\"\n  const linkedinLink =\"https://www.linkedin.com/in/roman-rey-pedrero\"\n  const githubLink = \"https://www.github.com/rooom13\"\n\n  const mailClass = \"fa fa-envelope-o fa-4x\"\n  const linkedinClass = \"fa fa-linkedin fa-4x\"\n  const githubClass = \"fa fa-github fa-4x\"\n\n  return (\n\n\n    \n    <Wrapper>\n      <p>Let's have a talk!</p>\n      <ButtonsWrapper>\n        <ContactButton iconClass={mailClass }link={mailLink}>romanreypedrero@gmail.com</ContactButton>\n        <ContactButton iconClass={linkedinClass} link={linkedinLink} >linkedin.com/in/roman-rey-pedrero</ContactButton>\n        <ContactButton iconClass={githubClass} link={githubLink} target=\"_blank\" title=\"GitHub has no chat but you can see my projects there!\">github.com/rooom13  </ContactButton>\n      </ButtonsWrapper>\n    </Wrapper>\n  )\n}\n\nconst ButtonsWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  \n  ${media.tablet`\n  flex-direction: row;\n  justify-content: space-evenly;\n\n  `}\n\n\n`\n\n\nconst Wrapper = styled.div`\n\n  `\n","import React, { Component } from 'react';\nimport styled from 'styled-components'\nimport Navbar from './components/Navbar';\nimport Introduction from './pages/Introduction'\nimport Contact from './pages/Contact'\n\nclass App extends Component {\n\n  state = {\n    isContactShown: false,\n    isCvShown: false,\n    isIntroductionShown: true,\n    isPortfolioShown: false\n  }\n\n\n\n  showContact = () => {\n    this.setState({\n      isContactShown: true,\n      isCvShown: false,\n      isIntroductionShown: false,\n      isPortfolioShown: false\n    })\n  }\n  showCv = ()   => {\n    this.setState({\n      isContactShown: false,\n      isCvShown: true,\n      isIntroductionShown: false,\n      isPortfolioShown: false\n    })\n  }\n  showPortfolio = ()   => {\n    this.setState({\n      isContactShown: false,\n      isCvShown: false,\n      isIntroductionShown: false,\n      isPortfolioShown: true\n    })\n  }\n  showIntroduction = ()   => {\n    this.setState({\n      isContactShown: false,\n      isCvShown: false,\n      isIntroductionShown: true,\n      isPortfolioShown: false\n    })\n  }\n  render() {\n\n    const { isContactShown, isCvShown, isIntroductionShown, isPortfolioShown } = this.state\n\n    return (\n\n      <Wrapper>\n        <Navbar \n        isContactShown={isContactShown}\n        isCvShown={isCvShown}\n        isIntroductionShown={isIntroductionShown}\n        isPortfolioShown={isPortfolioShown}\n\n        showContact={this.showContact} \n        showCv={this.showCv}\n        showPortfolio={this.showPortfolio}\n        showIntroduction={this.showIntroduction} />\n        <ContentWrapper>\n          <Content>\n            {isIntroductionShown && <Introduction />}\n            {isContactShown && <Contact />}\n          </Content>\n        </ContentWrapper>\n      </Wrapper>\n    )\n  }\n}\n\n\nconst Content = styled.section`\n  margin: 1rem;\n  width: 800px;\n`\n\nconst ContentWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  \n`\n\nconst Wrapper = styled.div`\n  color: white;\n  \n`\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}