{"version":3,"sources":["components/SideNavbar.js","App.js","serviceWorker.js","index.js","images/profile.png"],"names":["Sidebar","styled","nav","_templateObject","SideNavbar","react_default","a","createElement","id","className","href","src","ProfilePic","App","components_SideNavbar","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"uTAwEA,IAAMA,EAAUC,IAAOC,IAAVC,KAKEC,EAvEf,WACE,OAGEC,EAAAC,EAAAC,cAACP,EAAD,CAASQ,GAAG,UAAUC,UAAU,mBAC9BJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,mBACbJ,EAAAC,EAAAC,cAAA,OAAKC,GAAG,iBACNH,EAAAC,EAAAC,cAAA,KAAGG,KAAK,KAAR,QACAL,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,KAAGE,UAAU,mBAGjBJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,kBACbJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,YACbJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,6BAA6BE,IAAKC,QAGrDP,EAAAC,EAAAC,cAAA,OAAKE,UAAU,gBACbJ,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,MAAIE,UAAU,eACZJ,EAAAC,EAAAC,cAAA,wBAEFF,EAAAC,EAAAC,cAAA,MAAIE,UAAU,oBACZJ,EAAAC,EAAAC,cAAA,KAAGG,KAAK,KACNL,EAAAC,EAAAC,cAAA,KAAGE,UAAU,QACbJ,EAAAC,EAAAC,cAAA,oBAGJF,EAAAC,EAAAC,cAAA,MAAIE,UAAU,oBACZJ,EAAAC,EAAAC,cAAA,KAAGG,KAAK,KACNL,EAAAC,EAAAC,cAAA,KAAGE,UAAU,OACbJ,EAAAC,EAAAC,cAAA,2BAEFF,EAAAC,EAAAC,cAAA,OAAKE,UAAU,qBAGjBJ,EAAAC,EAAAC,cAAA,MAAIE,UAAU,eACZJ,EAAAC,EAAAC,cAAA,yBAEFF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,KAAGG,KAAK,KACNL,EAAAC,EAAAC,cAAA,KAAGE,UAAU,OACbJ,EAAAC,EAAAC,cAAA,+BAGJF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,KAAGG,KAAK,KACNL,EAAAC,EAAAC,cAAA,KAAGE,UAAU,OACbJ,EAAAC,EAAAC,cAAA,2BAGJF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,KAAGG,KAAK,KACNL,EAAAC,EAAAC,cAAA,KAAGE,UAAU,OACbJ,EAAAC,EAAAC,cAAA,gCChCDM,MAxBf,WACE,OACER,EAAAC,EAAAC,cAAA,OAAKE,UAAU,sCACbJ,EAAAC,EAAAC,cAAA,KAAGC,GAAG,eAAeC,UAAU,sBAAsBC,KAAK,KACxDL,EAAAC,EAAAC,cAAA,KAAGE,UAAU,iBAEfJ,EAAAC,EAAAC,cAACO,EAAD,MAEAT,EAAAC,EAAAC,cAAA,QAAME,UAAU,gBACdJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,mBACbJ,EAAAC,EAAAC,cAAA,kCAEAF,EAAAC,EAAAC,cAAA,OAAKE,UAAU,OACbJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,wBACbJ,EAAAC,EAAAC,cAAA,sCACAF,EAAAC,EAAAC,cAAA,yGCPMQ,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAOhB,EAAAC,EAAAC,cAACe,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC,sDEnInBC,EAAAC,QAAiBC,EAAAC,EAAuB","file":"static/js/main.192383cf.chunk.js","sourcesContent":["import React from 'react';\nimport styled from 'styled-components'\n\nimport '../App.css';\nimport ProfilePic from '../images/profile.png'\n\nfunction SideNavbar() {\n  return (\n\n\n    <Sidebar id=\"sidebar\" className=\"sidebar-wrapper\">\n      <div className=\"sidebar-content\">\n        <div id=\"close-sidebar\" >\n          <a href=\"#\">-.- </a>\n          <div >\n            <i className=\"fas fa-times\"></i>\n          </div>\n        </div>\n        <div className=\"sidebar-header\">\n          <div className=\"user-pic\">\n            <img className=\"img-responsive img-rounded\" src={ProfilePic} />\n          </div>\n        </div>\n        <div className=\"sidebar-menu\">\n          <ul>\n            <li className=\"header-menu\">\n              <span>General</span>\n            </li>\n            <li className=\"sidebar-dropdown\">\n              <a href=\"#\">\n                <i className=\"fa \"></i>\n                <span>CV</span>\n              </a>\n            </li>\n            <li className=\"sidebar-dropdown\">\n              <a href=\"#\">\n                <i className=\"fa\"></i>\n                <span>Projects  </span>\n              </a>\n              <div className=\"sidebar-submenu\">\n              </div>\n            </li>\n            <li className=\"header-menu\">\n              <span>Projects</span>\n            </li>\n            <li>\n              <a href=\"#\">\n                <i className=\"fa\"></i>\n                <span>DailyWord bot</span>\n              </a>\n            </li>\n            <li>\n              <a href=\"#\">\n                <i className=\"fa\"></i>\n                <span>Project 2</span>\n              </a>\n            </li>\n            <li>\n              <a href=\"#\">\n                <i className=\"fa\"></i>\n                <span>Project 3</span>\n              </a>\n            </li>\n          </ul>\n        </div>\n      </div>\n\n    </Sidebar>\n\n  );\n}\n\nconst Sidebar = styled.nav`\n  \n\n`\n\nexport default SideNavbar;\n","import React from 'react';\nimport SideNavbar from './components/SideNavbar';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"page-wrapper chiller-theme toggled\">\n      <a id=\"show-sidebar\" className=\"btn btn-sm btn-dark\" href=\"#\">\n        <i className=\"fas fa-bars\"></i>\n      </a>\n      <SideNavbar />\n\n      <main className=\"page-content\">\n        <div className=\"container-fluid\">\n          <h2>RomÃ¡n Rey Pedrero</h2>\n\n          <div className=\"row\">\n            <div className=\"form-group col-md-12\">\n              <p>Hi there!!! Servus! Hola!</p>\n              <p>So this is supposed to be my personal page but seems like I'm building it ðŸ˜…</p>\n            </div>\n          </div>\n        </div>\n      </main >\n    </div >\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/profile.9ddc953d.png\";"],"sourceRoot":""}